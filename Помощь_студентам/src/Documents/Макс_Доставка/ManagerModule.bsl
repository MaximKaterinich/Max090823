 
 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	 
	 #Область ПрограммныйИнтерфейс
	 
	 Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		 
		 // Доставка
		 КомандаПечати = КомандыПечати.Добавить();
		 КомандаПечати.Идентификатор = "Макс_Доставка";
		 КомандаПечати.Представление = НСтр("ru = 'Доставка'");
		 КомандаПечати.Порядок = 5;
		 
		 // Анкета клиента
		 КомандаПечати = КомандыПечати.Добавить();
		 КомандаПечати.Идентификатор = "Макс_Анкета";
		 КомандаПечати.Представление = НСтр("ru = 'Анкета клиента'");
		 КомандаПечати.Порядок = 5;
		 
		 // Транспортная накладная
		 КомандаПечати = КомандыПечати.Добавить();
		 КомандаПечати.Идентификатор = "Макс_ТранспортнаяНакладная";
		 КомандаПечати.Представление = НСтр("ru = 'Транспорнтная накладная'");
		 КомандаПечати.Порядок = 5;    
		 
		 // Печать Договора доставки в формате docx, в Word
		 КомандаПечати = КомандыПечати.Добавить();
		 КомандаПечати.Идентификатор = "Макс_ДоговорНаДоставку";
		 КомандаПечати.Представление = НСтр("ru = 'Договор на доставку'");
		 КомандаПечати.Порядок = 5;
		 
		 // Комплект документов
		 КомандаПечати = КомандыПечати.Добавить();
		 КомандаПечати.Идентификатор = "Макс_Доставка,Макс_Анкета,Макс_ТранспортнаяНакладная";
		 КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
		 КомандаПечати.Порядок = 75;
		 
	 КонецПроцедуры
	 
	 Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		 
		 // Доставка
		 ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Макс_Доставка");
		 Если ПечатнаяФорма <> Неопределено Тогда
			 ПечатнаяФорма.ТабличныйДокумент = ПечатьДоставки(МассивОбъектов, ОбъектыПечати);
			 ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Доставка'");
			 ПечатнаяФорма.ПолныйПутьКМакету = "Документ.Макс_Доставка.ПФ_MXL_Доставка";
		 КонецЕсли;
		 
		 // Анкета клиента
		 ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Макс_Анкета");
		 Если ПечатнаяФорма <> Неопределено Тогда
			 ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкеты(МассивОбъектов, ОбъектыПечати);
			 ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета клиента'");
			 ПечатнаяФорма.ПолныйПутьКМакету = "Документ.Макс_Доставка.ПФ_MXL_АнкетаКлиента";
		 КонецЕсли;
		 
		 // Транспортная накладная
		 ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Макс_ТранспортнаяНакладная");
		 Если ПечатнаяФорма <> Неопределено Тогда
			 ПечатнаяФорма.ТабличныйДокумент = ПечатьТранспортнойНакладной(МассивОбъектов, ОбъектыПечати);
			 ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Транспортная Накладная'");
			 ПечатнаяФорма.ПолныйПутьКМакету = "Документ.Макс_Доставка.ПФ_MXL_ТранспортнаяНакладная";
		 КонецЕсли;   
		 
		 //ПечатьДоговора доставки
		 ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Макс_ДоговорНаДоставку");
		 Если ПечатнаяФорма <> Неопределено Тогда
			 ОфисныеДокументы = НапечататьДоговорDOCX(МассивОбъектов);
			 ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Договор на доставку'");
			 ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
		 КонецЕсли;
		 
	 КонецПроцедуры
	 
	 #КонецОбласти
	 
	 #Область СлужебныеПроцедурыИФункции
	 
	 Функция ПечатьДоставки(МассивОбъектов, ОбъектыПечати)
		 
		 ТабличныйДокумент = Новый ТабличныйДокумент;
		 ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Доставка";
		 
		 Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Макс_Доставка.ПФ_MXL_Доставка");
		 
		 ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		 
		 ПервыйДокумент = Истина;
		 
		 Пока ДанныеДокументов.Следующий() Цикл
			 
			 Если Не ПервыйДокумент Тогда
				 // Все документы нужно выводить на разных страницах.
				 ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			 КонецЕсли;
			 
			 ПервыйДокумент = Ложь;
			 
			 НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			 
			 ВывестиЗаголовокДоставки(ДанныеДокументов, ТабличныйДокумент, Макет);
			 
			 ВывестиТовары(ДанныеДокументов, ТабличныйДокумент, Макет);   
			 
			 ВывестиПодвалДоставки(ДанныеДокументов, ТабличныйДокумент, Макет);  
			 
			 
			 
			 //ВывестиКартинку (ДанныеДокументов, ТабличныйДокумент, Макет); //в разработке, пока не работает  //вывести в заголовок
			 
			 // В табличном документе необходимо задать имя области, в которую был 
			 // выведен объект. Нужно для возможности печати комплектов документов.
			 УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			 НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
			 
		 КонецЦикла;
		 
		 Возврат ТабличныйДокумент;
		 
	 КонецФункции
	 
	 Функция ПечатьАнкеты(МассивОбъектов, ОбъектыПечати) //+
		 
		 ТабличныйДокумент = Новый ТабличныйДокумент;
		 ТабличныйДокумент.КлючПараметровПечати = "Макс_Анкета";
		 
		 Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Макс_Доставка.ПФ_MXL_АнкетаКлиента");
		 
		 ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		 
		 ПервыйДокумент = Истина;
		 
		 Пока ДанныеДокументов.Следующий() Цикл
			 
			 Если Не ПервыйДокумент Тогда
				 // Все документы нужно выводить на разных страницах.
				 ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			 КонецЕсли;
			 
			 ПервыйДокумент = Ложь;
			 
			 НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			 
			 ВывестиАнкету(ДанныеДокументов, ТабличныйДокумент, Макет);   
			 
			 //ВывестиQRкод(ДанныеДокументов, ТабличныйДокумент, Макет);  
			 
			 // В табличном документе необходимо задать имя области, в которую был 
			 // выведен объект. Нужно для возможности печати комплектов документов.
			 УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			 НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
			 
		 КонецЦикла;	  
		 
		 Возврат ТабличныйДокумент;
		 
	 КонецФункции
	 
	 Функция ПечатьТранспортнойНакладной(МассивОбъектов, ОбъектыПечати)
		 
		 ТабличныйДокумент = Новый ТабличныйДокумент;
		 ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ТранспортнаяНакладная";
		 
		 Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Макс_Доставка.ПФ_MXL_ТранспортнаяНакладная");
		 
		 ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
		 
		 ПервыйДокумент = Истина;
		 
		 Пока ДанныеДокументов.Следующий() Цикл
			 
			 Если Не ПервыйДокумент Тогда
				 // Все документы нужно выводить на разных страницах.
				 ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			 КонецЕсли;
			 
			 ПервыйДокумент = Ложь;
			 
			 НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			 
			 ВывестиШапкуНакладной(ДанныеДокументов, ТабличныйДокумент, Макет);  
			 ВывестиТовары (ДанныеДокументов, ТабличныйДокумент, Макет);
			 ВывестиПодписантов(ДанныеДокументов, ТабличныйДокумент, Макет); 
			 //ВывестиQRкод(ДанныеДокументов, ТабличныйДокумент, Макет);  
			 
			 // В табличном документе необходимо задать имя области, в которую был 
			 // выведен объект. Нужно для возможности печати комплектов документов.
			 УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			 НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		 КонецЦикла;	
		 
		 Возврат ТабличныйДокумент;
		 
	 КонецФункции
	 
	 Функция НапечататьДоговорDOCX(МассивОбъектов)
		 // Создаём пустое соответствие для размещения печатных форм OpenXМL — результат функции
		 ОфисныеДокументы = Новый Соответствие;
		 // Готовим макет для формирования печатной формы OpenXML
		 МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.Макс_Доставка.ПФ_Docx_ДоговорНаДоставку");  //Тип макета - Двоичные данные
		 Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);  
		 // Создаём структуру областей формируемой печатной формы OpenXМL
		 ОписаниеОбластей = Новый Структура;
		 УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей,"Заголовок","Общая");
		 УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей,"ПредметДоговора","Общая");
		 УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей,"ТекстДоговора","Общая");
		 УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей,"ДанныеДоговора","Общая"); 
		 // Получаем данные для печати из базы данных
		 // Функцию ДанныеДляПечатиДоговора необходимо разработать самостоятельно
		 ДанныеДляПечати = ДанныеДляПечатиДоговора(МассивОбъектов); 
		 Для Каждого ДанныеДокумента Из ДанныеДляПечати Цикл
		 ДанныеДокумента= ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ДанныеДляПечати[0]);
			 // Готовим печатную форму в формате офисного документа
			 ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
			 
			 Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Заголовок"]);
			 УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента); 
			 Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ПредметДоговора"]);
			 УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);
			 Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ТекстДоговора"]);
			 УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);
			 Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ДанныеДоговора"]);
			 УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента); 
			 
			 АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
			 ОфисныеДокументы.Вставить(АдресХранилищаПечатнойФормы, Строка(ДанныеДокумента.Ссылка));
			 УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
			 
		 КонецЦикла;        
		 
		 УправлениеПечатью.ОчиститьСсылки(Макет);
		 
		 Возврат ОфисныеДокументы;
		 
	 КонецФункции 
	 
	 
	 Функция ПолучитьДанныеДокументов(МассивОбъектов)
		 
		 Запрос = Новый Запрос;
		 Запрос.Текст = "ВЫБРАТЬ
		 |	Макс_Доставка.Ссылка КАК Ссылка,
		 |	Макс_Доставка.Номер КАК Номер,
		 |	Макс_Доставка.Дата КАК Дата,
		 |	Макс_Доставка.Организация КАК Организация,
		 |	Макс_Доставка.Контрагент КАК Контрагент,
		 |	Макс_Доставка.Договор КАК Договор,
		 |	Макс_Доставка.АдресДоставки КАК АдресДоставки,
		 |	Макс_Доставка.Ответственный КАК Ответственный,
		 |	Макс_Доставка.Комментарий КАК Комментарий,
		 |	Макс_Доставка.Товары.(
		 |		Ссылка КАК Ссылка,
		 |		НомерСтроки КАК НомерСтроки,
		 |		Номенклатура КАК Номенклатура,
		 |		Количество КАК Количество
		 |	) КАК Товары
		 |ИЗ
		 |	Документ.Макс_Доставка КАК Макс_Доставка
		 |ГДЕ
		 |	Макс_Доставка.Ссылка В(&МассивОбъектов)";
		 
		 Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		 
		 Возврат Запрос.Выполнить().Выбрать();
		 
	 КонецФункции
	 
	 Процедура ВывестиЗаголовокДоставки(ДанныеДокументов, ТабличныйДокумент, Макет) //Доставка
		 
		 ОбластьЗаголовкаДоставки = Макет.ПолучитьОбласть("Заголовок");  
		 ШаблонЗаголовка = "Доставка №%1 от %2";
		 ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		 ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		 Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));   
		 
		 ОбластьШапкиДоставки = Макет.ПолучитьОбласть("Шапка");
		 
		 ДанныеПечати = Новый Структура;   
		 ДанныеПечати.Вставить("Доставка", ТекстЗаголовка);
		 ДанныеПечати.Вставить("Организация", ДанныеДокументов.Организация); 
		 ДанныеПечати.Вставить("Контрагент", ДанныеДокументов.Контрагент);
		 ДанныеПечати.Вставить("Договор", ДанныеДокументов.Договор);
		 ДанныеПечати.Вставить("АдресДоставки", ДанныеДокументов.АдресДоставки);
		 
		 ОбластьЗаголовкаДоставки.Параметры.Заполнить(ДанныеПечати);
		 ТабличныйДокумент.Вывести(ОбластьЗаголовкаДоставки);
		 
		 ОбластьШапкиДоставки.Параметры.Заполнить(ДанныеПечати);
		 ТабличныйДокумент.Вывести(ОбластьШапкиДоставки);
		 
	 КонецПроцедуры      
	 
	 Процедура ВывестиАнкету(ДанныеДокументов, ТабличныйДокумент, Макет) //Анкета
		 
		 ОбластьЗаголовкаАнкеты = Макет.ПолучитьОбласть("Заголовок");  
		 ШаблонЗаголовка = "Анкета о доставке №%1 от %2";
		 ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		 ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		 Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));  
		 
		 ОбластьЗаголовкаАнкеты.Рисунки.QRкод.Картинка = ГенерацияШтрихкода(ДанныеДокументов);
		 ;
		 
		 ОбластьТекстаАнкеты = Макет.ПолучитьОбласть("ТекстАнкеты");
		 
		 ДанныеПечати = Новый Структура;   
		 ДанныеПечати.Вставить("АнкетаОДоставке", ТекстЗаголовка);
		 
		 ОбластьЗаголовкаАнкеты.Параметры.Заполнить(ДанныеПечати);
		 ТабличныйДокумент.Вывести(ОбластьЗаголовкаАнкеты);
		 
		 ОбластьТекстаАнкеты.Параметры.Заполнить(ДанныеПечати);
		 ТабличныйДокумент.Вывести(ОбластьТекстаАнкеты);
		 
	 КонецПроцедуры      
	 
	 Процедура ВывестиШапкуНакладной(ДанныеДокументов, ТабличныйДокумент, Макет)
		 
		 ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Шапка");
		 
		 ДанныеПечати = Новый Структура;
		 
		 ШаблонЗаголовка = "Транспортная накладная №%1 от %2";
		 ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		 ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		 Формат(ДанныеДокументов.Дата, "ДЛФ=DD")); 
		 
		 ШаблонГрузоотправителя = "Грузоотправитель: %1"; 
		 ТекстГрузоотправителя = СтрШаблон (ШаблонГрузоотправителя, ДанныеДокументов.Организация); 
		 
		 ШаблонГрузополучателя = "Грузополучатель: %1"; 
		 ТекстГрузополучателя = СтрШаблон (ШаблонГрузополучателя, ДанныеДокументов.Контрагент); 
		 
		 ДанныеПечати.Вставить("ТранспортнаяНакладная", ТекстЗаголовка); 
		 ДанныеПечати.Вставить("ГрузоотправительОрганизация", ТекстГрузоотправителя);
		 ДанныеПечати.Вставить("ГрузополучательКонтрагент", ТекстГрузополучателя);  
		 
		 ОбластьЗаголовокДокумента.Рисунки.QRкод.Картинка =  ГенерацияШтрихкода(ДанныеДокументов);
		 
		 ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
		 ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
		 
	 КонецПроцедуры
	 
	 Процедура ВывестиТовары (ДанныеДокументов, ТабличныйДокумент, Макет)
		 
		 ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		 ОбластьСтрока = Макет.ПолучитьОбласть("Строка"); 
		 
		 ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		 
		 ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
		 Пока ВыборкаТовары.Следующий() Цикл
			 ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
			 ТабличныйДокумент.Вывести(ОбластьСтрока);
		 КонецЦикла;
		 
	 КонецПроцедуры
	 
	 Процедура ВывестиПодвалДоставки(ДанныеДокументов, ТабличныйДокумент, Макет)
		 
		 ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");   
		 
		 ДанныеПечати = Новый Структура;   
		 ДанныеПечати.Вставить("Ответственный", ДанныеДокументов.Ответственный);
		 ДанныеПечати.Вставить("Комментарий", ДанныеДокументов.Комментарий); 
		 
		 ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		 
		 ТабличныйДокумент.Вывести(ОбластьПодвал);
		 
	 КонецПроцедуры    
	 
	 Процедура ВывестиПодписантов(ДанныеДокументов, ТабличныйДокумент, Макет);  
		 
		 ОбластьПодписантов = Макет.ПолучитьОбласть("Подписант");
		 
		 ТабличныйДокумент.Вывести(ОбластьПодписантов);
		 
	 КонецПроцедуры
	 
	 Функция ГенерацияШтрихкода(ДанныеДокументов)
		 ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ДанныеДокументов.Ссылка, 1, 120);
		 Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			 ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			 |Технические подробности см. в журнале регистрации.'");
			 ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		 Иначе
			 КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			 Возврат КартинкаQRКода;
		 КонецЕсли;
	 КонецФункции 
	 
	 Функция ДанныеДляПечатиДоговора(МассивОбъектов) 
		 
		 Запрос = Новый Запрос;
		 Запрос.Текст =  "ВЫБРАТЬ
		 |	Макс_Доставка.Ссылка КАК Ссылка,
		 |	Макс_Доставка.ВерсияДанных КАК ВерсияДанных,
		 |	Макс_Доставка.ПометкаУдаления КАК ПометкаУдаления,
		 |	Макс_Доставка.Номер КАК Номер,
		 |	Макс_Доставка.Дата КАК Дата,
		 |	Макс_Доставка.Проведен КАК Проведен,
		 |	Макс_Доставка.Организация КАК Организация,
		 |	Макс_Доставка.Контрагент КАК Контрагент,
		 |	Макс_Доставка.Договор КАК Договор,
		 |	Макс_Доставка.АдресДоставки КАК АдресДоставки,
		 |	Макс_Доставка.Основание КАК Основание,
		 |	Макс_Доставка.Ответственный КАК Ответственный,
		 |	Макс_Доставка.Комментарий КАК Комментарий,
		 |	Макс_Доставка.ЕстьФайлы КАК ЕстьФайлы,
		 |	Макс_Доставка.Товары.(
		 |		Ссылка КАК Ссылка,
		 |		НомерСтроки КАК НомерСтроки,
		 |		Номенклатура КАК Номенклатура,
		 |		Количество КАК Количество
		 |	) КАК Товары,
		 |	Макс_Доставка.Организация.ИНН КАК ОрганизацияИНН,
		 |	Макс_Доставка.Организация.КПП КАК ОрганизацияКПП,
		 |	Макс_Доставка.Организация.КонтактнаяИнформация.(
		 |		Страна КАК ОрганизацияСтрана,
		 |		Регион КАК ОрганизацияРегион,
		 |		Город КАК ОрганизацияГород,
		 |		АдресЭП КАК ОрганизацияАдресЭП,
		 |		НомерТелефона КАК ОрганизацияНомерТелефона
		 |	) КАК Организация1,
		 |	Макс_Доставка.Контрагент.ИНН КАК КонтрагентИНН,
		 |	Макс_Доставка.Контрагент.КПП КАК КонтрагентКПП,
		 |	Макс_Доставка.Контрагент.КонтактнаяИнформация.(
		 |		Страна КАК КонтрагентСтрана,
		 |		Регион КАК КонтрагентРегион,
		 |		Город КАК КонтрагентГород,
		 |		АдресЭП КАК КонтрагентАдресЭП,
		 |		НомерТелефона КАК КонтрагентНомерТелефона
		 |	) КАК Контрагент1
		 |ИЗ
		 |	Документ.Макс_Доставка КАК Макс_Доставка
		 |ГДЕ
		 |	Макс_Доставка.Ссылка В(&Ссылка)";
		 
		 Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
		 Возврат Запрос.Выполнить().Выгрузить();
			 
	 КонецФункции
	 	 
	 #КонецОбласти
	 
 #КонецЕсли